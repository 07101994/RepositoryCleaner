<catel:Window x:Class="RepositoryCleaner.Views.MainWindow"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
              xmlns:catel="http://catel.codeplex.com"
              xmlns:views="clr-namespace:RepositoryCleaner.Views"
              xmlns:orc="http://www.wildgums.net.au/orc"
              xmlns:logging="clr-namespace:RepositoryCleaner.Logging"
              xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
              xmlns:converters="clr-namespace:RepositoryCleaner.Converters"
              mc:Ignorable="d" Width="600">

    <catel:StackGrid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="2*" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Label>
            <TextBlock TextWrapping="Wrap">
                This tool can help you clean up space when you have a lot of repositories. Select the repositories root below
                and click the 'Analyze' button to check how much space can be cleaned up.
                <LineBreak /><LineBreak />
                Once the repositories have been analyzed, you can use the 'Clean up' button to actually clean up the repositories. 
                To exclude repositories from the process, use the checkboxes to exclude them.
            </TextBlock>
        </Label>

        <views:DirectoryPickerView LabelText="Repositories root" SelectedDirectory="{Binding RepositoriesRoot}" />

        <views:SummaryView DataContext="{Binding Repositories}" />

        <TextBox Text="{Binding RepositoryFilter}" Margin="0,4,0,4">
            <i:Interaction.Behaviors>
                <catel:UpdateBindingOnTextChanged />
            </i:Interaction.Behaviors>
        </TextBox>

        <DataGrid x:Name="dataGrid" ItemsSource="{Binding FilteredRepositories}" AutoGenerateColumns="False">
            <DataGrid.Resources>
                <Style TargetType="TextBlock" x:Key="MultiLineColumnViewStyle">
                    <Setter Property="TextWrapping" Value="Wrap" />
                </Style>

                <Style TargetType="TextBox" x:Key="MultiLineColumnEditStyle">
                    <Setter Property="TextWrapping" Value="Wrap" />
                    <Setter Property="AcceptsReturn" Value="True" />
                </Style>

                <DataTemplate x:Key="IsIncludedCheckBoxDataTemplate">
                    <CheckBox IsChecked="{Binding IsIncluded}" Unchecked="OnCheckBoxCheckedChanged" Checked="OnCheckBoxCheckedChanged"
                              HorizontalAlignment="Center" VerticalAlignment="Center" />
                </DataTemplate>
            </DataGrid.Resources>

            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Include" CellTemplate="{StaticResource IsIncludedCheckBoxDataTemplate}" />
                <DataGridTemplateColumn Header="Name" Width="200">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}" ToolTip="{Binding Directory}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Binding="{Binding CleanableSize, Converter={converters:SpaceToTextConverter}}" Header="Cleanable space" />
            </DataGrid.Columns>
        </DataGrid>

        <!--<ScrollViewer VerticalScrollBarVisibility="Auto" Focusable="False"
                      Visibility="{Binding FilteredRepositories, Converter={catel:ReferenceToCollapsingVisibilityConverter}, ConverterParameter=False}">
            <ItemsControl ItemsSource="{Binding FilteredRepositories}" Focusable="False">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <views:RepositoryView />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>-->

        <Expander IsExpanded="True" Header="Output" Margin="0 20 0 0">
            <RichTextBox x:Name="logTextBox" Margin="0,6,0,0" ScrollViewer.VerticalScrollBarVisibility="Auto" />
        </Expander>

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
            <catel:AnimatedGif Visibility="{Binding IsBusy, Converter={catel:BooleanToHidingVisibilityConverter}}" 
                               GifSource="/Resources/Images/Loading.gif" HorizontalAlignment="Center" VerticalAlignment="Center" 
                               Width="24" Height="24" Margin="4,8,4,4" />

            <Button Content="Analyze" Command="{Binding Analyze}" Style="{StaticResource RightAlignedFixedSizeButtonStyle}" />
            <Button Content="Clean up" Command="{Binding CleanUp}" Style="{StaticResource RightAlignedFixedSizeButtonStyle}" />
        </StackPanel>
    </catel:StackGrid>

</catel:Window>
